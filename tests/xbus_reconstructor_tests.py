from src.xbus_reconstructor import XbusReconstructor
import unittest

class XbusReconstructorTests(unittest.TestCase):

    def test_incomplete_start_delimiter(self):
        xbus_msgs = [b'\xfa',
            b'\xff6@\x10 \x02\x05\xe7\x10`\x04\x00L\x03\xd7 0\x0c\xc0\xd0\xc8\xf9@\x96\xeb\xf0\xc1y7\xaf@\x10\x0c\xbd\xa5\xb0`\xbd\xe4A\xc8?x\xc2\x89@0\x0c:\xd5\xfe\xd0;\x9e\xc5\xb49\xbe\x00\x00\xe0 \x04\x00\x00\x00\x023\xfa'
        ]
        expected_msgs = [b'\xfa\xff6@\x10 \x02\x05\xe7\x10`\x04\x00L\x03\xd7 0\x0c\xc0\xd0\xc8\xf9@\x96\xeb\xf0\xc1y7\xaf@\x10\x0c\xbd\xa5\xb0`\xbd\xe4A\xc8?x\xc2\x89@0\x0c:\xd5\xfe\xd0;\x9e\xc5\xb49\xbe\x00\x00\xe0 \x04\x00\x00\x00\x023']
        reconstruced_msgs = []
        xbus_reconstructor = XbusReconstructor()
        for xbus_msg in xbus_msgs:
            reconstruced_msgs += xbus_reconstructor._reconstruct_xbus_data(xbus_msg)
        for reconstructed_msg in reconstruced_msgs:
            self.assertEqual(reconstructed_msg[0], 0xFA)
        self.assertEqual(reconstruced_msgs, expected_msgs)
        
        
    def test_reconstruction_from_large_dump(self):
        xbus_msgs = [b"\x00\xd9\xfa\xff6@\x10 \x02\x06\x15\x10`\x04\x017^\x04 0\x0c\xc1\x17\xa4\xf3@@2B\xc1p\xb6J@\x10\x0c\xbdQ\xb7\xc0\xbe%\xc8\x18?w|\x8b@0\x0c<\x92\x86\x8c\xbc\xf8.\xf6<\x00\xa4\x00\xe0 \x04\x00\x00\x00\x02\xc5\xfa\xff6@\x10 \x02\x06\x16\x10`\x04\x017a\xec 0\x0c\xc1\x17\xa5\x83@@4&\xc1p\xe7\xe3@\x10\x0c\xbdO\xc3@\xbe%\xd5\x14?wr\x11@0\x0c\xbc\xd8 ^\xbcPyV<\x89z\x00\xe0 \x04\x00\x00\x00\x02\xf5\xfa\xff6@\x10 \x02\x06\x17\x10`\x04\x017e\xd4 0\x0c\xc1\x17\xa8\xf5@@\x07\x88\xc1q\x0b\xd0@\x10\x0c\xbdQ\xe1\x90\xbe%\xb5\xdc?ws\x8d@0\x0c<\xe5\xbdH\xbc\x84\xc6n;\xbf(\x00\xe0 \x04\x00\x00\x00\x02'\xfa\xff6@\x10 \x02\x06\x18\x10`\x04\x017i\xbc 0\x0c\xc1\x17\xa56@@mz\xc1q71@\x10\x0c\xbdP#\xe0\xbe%\xed`?ww\xec@0\x0c\xbb\xd2\xac:;\xd7\x15\xb8:\xe8 \x00\xe0 \x04\x00\x00\x00\x02\x8f\xfa\xff6@\x10 \x02\x06\x19\x10`\x04\x017m\xa4 0\x0c\xc1\x17\xa9\xd0@@Q\xfa\xc1q`Z@\x10\x0c\xbdPd\xa0\xbe&\x03h?wp\xc6@0\x0c<\xa9u\x0e\xbc\x9e\xde\xe6\xb9\x81\x00\x00\xe0 \x04\x00\x00\x00\x02/\xfa\xff6@\x10 \x02\x06\x1a\x10`\x04\x017q\x8c 0\x0c\xc1\x17\xb2\x17@@M\xf4\xc1q\x86\x02@\x10\x0c\xbdQ5\x10\xbe%\x81\xec?wq\x8e@0\x0c\xba2\xef\xd0;\xa0\xe9\xc0<\xa7\xf2\x00\xe0 \x04\x00\x00\x00\x02\xde\xfa\xff6@\x10 \x02\x06\x1b\x10`\x04\x017ut 0\x0c\xc1\x17\xb6\xbc@@2?\xc1q\xaf\xd0@\x10\x0c\xbdP\x1b\xc0\xbe%\xcf\xfc?wqk@0\x0c\xbbpN\xc0;~\xba\xf0;\xe9\x98\x00\xe0 \x04\x00\x00\x00\x02\xfd\xfa\xff6@\x10 \x02\x06\x1c\x10`\x04\x017y\\ 0\x0c\xc1\x17\xb2\x93@@g\xd1\xc1q\xc8i@\x10\x0c\xbdP\xe6`\xbe%\xdc8?wu\x99@0\x0c\xba\xa1\xa5@\xbcj\x19L9\xfe\x80\x00\xe0 \x04\x00\x00\x00\x02\xb4\xfa\xff6@\x10 \x02\x06\x1d\x10`\x04\x017}D 0\x0c\xc1\x17\xae\x10@@Q`\xc1q\xe8U@\x10\x0c\xbdO\x0e\xd0\xbe%\xba\xf8?wn\xae@0\x0c<\x9f\xa9\x0c\xbc~\x02^\xbb-\x10\x00\xe0 \x04\x00\x00\x00\x02\xe6\xfa\xff6@\x10 \x02\x06\x1e\x10`\x04\x017\x81, 0\x0c\xc1\x17\xa1\xd1@@\x7f\xca\xc1r\n"
            ,b'u@\x10\x0c\xbdP\xb4P\xbe%\xd00?wq$@0\x0c;\xaf\x13\xec9\xdfJ\x80<\x1a\xc0\x00\xe0 \x04\x00\x00\x00\x02\xbd\xfa\xff6@\x10 \x02\x06\x1f\x10`\x04\x017\x85\x14 0\x0c\xc1\x17\x9c\xd3@@\x98E\xc1r1\xac@\x10\x0c\xbdO\xcb\x00\xbe&\x05\\?w\x80t@0\x0c<\x04\xe1\xdf\xba\xbaOP;\x97h\x00\xe0 \x04\x00\x00\x00\x02\xee\xfa\xff6@\x10 \x02\x06 \x10`\x04\x017\x88\xfc 0\x0c\xc1\x17\x9av@@\x7f&\xc1rR\x88@\x10\x0c\xbdP\x96\x80\xbe&)\xf4?wm\xcc@0\x0c\xba\xfc\xea\x18\xbc\x98\x12\xc3:Y\x00\x00\xe0 \x04\x00\x00\x00\x02(\xfa\xff6@\x10 \x02\x06!\x10`\x04\x017\x8c\xe4 0\x0c\xc1\x17\x94y@@f\x95\xc1rh\xf8@\x10\x0c\xbdOg \xbe%\xef\xe0?w\x91p@0\x0c\xbb\xea\xb2l\xbcv\xe0\xfa<G\xe4\x00\xe0 \x04\x00\x00\x00\x02\xb7\xfa\xff6@\x10 \x02\x06"\x10`\x04\x017\x90\xcc 0\x0c\xc1\x17\x8eo@@\x96\x06\xc1r\x8b=@\x10\x0c\xbdQF0\xbe%\x92\xec?wo\x9d@0\x0c\xba$\x16@\xbb\x88u\x98\xbc\x98\x9a\x00\xe0 \x04\x00\x00\x00\x02\xea\xfa\xff6@\x10 \x02\x06#\x10`\x04\x017\x94\xb4 0\x0c\xc1\x17\x84>@@\xc1\xba\xc1r\xb0t@\x10\x0c\xbdO,P\xbe%\x93\x88?w\x88\xe2@0\x0c\xbb\x8c\xf4\x92\xbc\xaeAy\xbb\x89(\x00\xe0 \x04\x00\x00\x00\x02\x13\xfa\xff6@\x10 \x02\x06$\x10`\x04\x017\x98\x9c 0\x0c\xc1\x17\x7f\xd5@@\xd8\xa1\xc1r\xd9y@\x10\x0c\xbdR!@\xbe%\xb3$?wxz@0\x0c<,-\r\xbc]\xd6<\xbbU\x80\x00\xe0 \x04\x00\x00\x00\x02<\xfa\xff6@\x10 \x02\x06%\x10`\x04\x017\x9c\x84 0\x0c\xc1\x17|g@@\xcb\xa3\xc1r\xf3\xae@\x10\x0c\xbdP$\xb0\xbe%\xfd\xc8?wp\x8d@0\x0c;\x080\x10\xbc(7z<O\x08\x00\xe0 \x04\x00\x00\x00\x02\xc4\xfa\xff6@\x10 \x02\x06&\x10`\x04\x017\xa0l 0\x0c\xc1\x17wn@@\xf2\x9b\xc1s\x1eW@\x10\x0c\xbdO\xbf\x80\xbe&\x1aH?wag@0\x0c<(\xc8\xfc\xbc\xa0u?\xbcZ\x80\x00\xe0 \x04\x00\x00\x00\x02\xeb\xfa\xff6@\x10 \x02\x06\'\x10`\x04\x017\xa4T 0\x0c\xc1\x17\x80\x1c@A\x11-\xc1sJ\xa7@\x10\x0c\xbdP\xae`\xbe%\xef\x94?wq\xc5@0\x0c:\x04\x11`\xbc!A\x0e\xbcF\x98\x00\xe0 \x04\x00\x00\x00\x02\x14\xfa\xff6@\x10 \x02\x06(\x10`\x04\x017\xa8< 0\x0c\xc1\x17u8@@\xd8\xa4\xc1sn\x95@\x10\x0c\xbdQ\\\x80\xbe&\x18\xb0?wct@0\x0c:\x9d\x11`\xbc\x94}H\xbc]|\x00\xe0 \x04\x00\x00\x00\x02\x94\xfa\xff6@\x10 \x02\x06)\x10`\x04\x017\xac$ 0\x0c\xc1\x17u+@@\x9c)\xc1s\x88\x91@\x10\x0c\xbdP#\x00\xbe%\xb4\x1c?w|\xfe@0\x0c\xbc&\xed\xfc\xbc\x08\x9d><\x90\xc4\x00\xe0 \x04\x00\x00\x00\x02]\xfa\xff6@\x10 \x02\x06*\x10`\x04\x017\xb0\x0c 0\x0c\xc1\x17yq@@\x83\\\xc1s\xad\x9d@\x10\x0c\xbdQ\x0e\x80\xbe%\xb0H?wi5@0\x0c9\xae\xea \xbbh!\x00\xbc\xcb\x92\x00\xe0 \x04\x00\x00\x00\x02\xcf\xfa\xff6@\x10 \x02\x06+\x10`\x04\x017\xb3\xf4 0\x0c\xc1\x17\x88`@@\x88U\xc1s\xcd:@\x10\x0c\xbdO\x92\xa0\xbe%\xe1\xe8?w{\xb5@0\x0c\xbcw\xaf\x08\xba\xed\t@<\xde\x04\x00\xe0 \x04\x00\x00\x00\x02{\xfa\xff6@\x10 \x02\x06,\x10`\x04\x017\xb7\xdc 0\x0c\xc1\x17\x82\x83@@`\x86\xc1s\xeb\x0b@\x10\x0c\xbdPO`\xbe%\xac ?wep@0\x0c\xba\xea$\xa0\xbb\xdf-\xfc\xbc\xdc\x04\x00\xe0 \x04\x00\x00\x00\x02\x84\xfa\xff6@\x10 \x02\x06-\x10`\x04\x017\xbb\xc4 0\x0c\xc1\x17\x89\xc9@@M_\xc1t\x0e\xdc@\x10\x0c\xbdP\x14\x10\xbe%\xd7\x0c?w]R@0\x0c<\n'
            ,b'\x82\x98;\xab\xad\x9c\xbbE\x10\x00\xe0 \x04\x00\x00\x00\x02Q\xfa\xff6@\x10 \x02\x06.\x10`\x04\x017\xbf\xac 0\x0c\xc1\x17\x86\x03@@`4\xc1t/\xe6@\x10\x0c\xbdP80\xbe%\xa9X?wp\xac@0\x0c\xbb\x9a\xc3\xba\xbc\x03\xdc\x0e8t\x00\x00\xe0 \x04\x00\x00\x00\x02\xc3\xfa\xff6@\x10 \x02\x06/\x10`\x04\x017\xc3\x94 0\x0c\xc1\x17\x82r@@Pl\xc1tO&@\x10\x0c\xbdO\xc5`\xbe&\x08p?wg\xe3@0\x0c\xbc\xd1 m\xbb\xb0(|\xbd2\xf1\x00\xe0 \x04\x00\x00\x00\x02\x9f\xfa\xff6@\x10 \x02\x060\x10`\x04\x017\xc7| 0\x0c\xc1\x17}1@@<\x1f\xc1tn\xd5@\x10\x0c\xbdRD \xbe%\xc3\xdc?wah@0\x0c<t\x175\xbcnJ\x8a9{\x00\x00\xe0 \x04\x00\x00\x00\x02\xff\xfa\xff6@\x10 \x02\x061\x10`\x04\x017\xcbd 0\x0c\xc1\x17y\xfc@@|B\xc1t\x92\x9a@\x10\x0c\xbdP\xbb\xf0\xbe%\xd2d?wf\x86@0\x0c<\x83\x1b\xea\xbbYyp:\xfc\xe0\x00\xe0 \x04\x00\x00\x00\x02\xd7\xfa\xff6@\x10 \x02\x062\x10`\x04\x017\xcfL 0\x0c\xc1\x17vp@@K\x93\xc1t\xb0\x9b@\x10\x0c\xbdR \x00\xbe%\xee8?wk\xd2@0\x0c;\xc6\x08\xae;Aj\xd8:\xa9\x80\x00\xe0 \x04\x00\x00\x00\x02\x81\xfa\xff6@\x10 \x02\x063\x10`\x04\x017\xd34 0\x0c\xc1\x17t<@@\x92]\xc1t\xd5\xa9@\x10\x0c\xbdO\xa9@\xbe%\xe7\xbc?w{_@0\x0c<D\x11\x11\xbb\x1c\x18(8,\x00\x00\xe0 \x04\x00\x00\x00\x02a\xfa\xff6@\x10 \x02\x064\x10`\x04\x017\xd7\x1c 0\x0c\xc1\x17\x809@@\x978\xc1u\x04%@\x10\x0c\xbdPf`\xbe%\x84`?wf\xda@0\x0c\xbb\x06\xe5\xfc\xbc\xb8\xf21\xbc\x16\xc4\x00\xe0 \x04\x00\x00\x00\x02\xa8\xfa\xff6@\x10 \x02\x065\x10`\x04\x017\xdb\x04 0\x0c\xc1\x17\x81\x04@@\xc6\xd6\xc1u-\xd2@\x10\x0c\xbdO\xd9p\xbe&\x18p?wq`@0\x0c\xbc2_/\xbc\x84\x14\x1c9\xec\x00\x00\xe0 \x04\x00\x00\x00\x02R\xfa\xff6@\x10 \x02\x066\x10`\x04\x017\xde\xec 0\x0c\xc1\x17\x854@@\xcf"\xc1uT\x1b@\x10\x0c\xbdP\x08\x90\xbe%\xe0\\?wkA@0\x0c\xbb(\x8a\xe0\xbc\xa7\x1cx;*0\x00\xe0 \x04\x00\x00\x00\x02\xc7\xfa\xff6@\x10 \x02\x067\x10`\x04\x017\xe2\xd4 0\x0c\xc1\x17\x85&@A\x03v\xc1uu\x0c@\x10\x0c\xbdP\xfb\xe0\xbe&,T?wo\x0e@0\x0c\xb8A*\x00\xbc\x93\xc5\xe2\xb8\xbe\x00\x00\xe0 \x04\x00\x00\x00\x02>\xfa\xff6@\x10 \x02\x068\x10`\x04\x017\xe6\xbc 0\x0c\xc1\x17\x82\x8c@@\xfa)\xc1u\xa4\xfb@\x10\x0c\xbdQ\x13\xe0\xbe&$\xe0?wrJ@0\x0c<\xa2\xb0\x00\xbb\xe3\x16`<"\x1c\x00\xe0 \x04\x00\x00\x00\x02\xbe\xfa\xff6@\x10 \x02\x069\x10`\x04\x017\xea\xa4 0\x0c\xc1\x17p|@@\xad\x8e\xc1u\xbe\x1c@\x10\x0c\xbdQ\x1eP\xbe&\x12\xac?wrf@0\x0c\xbb$\xc9(\xbd\x06ff\xbb6\xb0\x00\xe0 \x04\x00\x00\x00\x02k\xfa\xff6@\x10 \x02\x06:\x10`\x04\x017\xee\x8c 0\x0c\xc1\x17q\x02@@\xa1\xd0\xc1u\xe1\x08@\x10\x0c\xbdQ\x9eP\xbe%\xd4H?wk\x0b@0\x0c;\xb2\x1d\x12\xbc ?><\x9e\x84\x00\xe0 \x04\x00\x00\x00\x02d\xfa\xff6@\x10 \x02\x06;\x10`\x04\x017\xf2t 0\x0c\xc1\x17o\x92@@\xa2i\xc1u\xfe\xd2@\x10\x0c\xbdP\xaa\x00\xbe%\xd7\xa0?wiF@0\x0c7\xd2Z\x00;a\xa9\x88\xbc\xae\xac\x00\xe0 \x04\x00\x00\x00\x02\xa6\xfa\xff6@\x10 \x02\x06<\x10`\x04\x017\xf6\\ 0\x0c\xc1\x17lc@@\xb28\xc1v\x1c\xb3@\x10\x0c\xbdO\xba\x80\xbe%\xcd$?wp\xc8@0\x0c<J\x08\x05\xbc\x00\xd8.:J\x80\x00\xe0 \x04\x00\x00\x00\x02g\xfa\xff6@\x10 \x02\x06=\x10`\x04\x017\xfaD 0\x0c\xc1\x17m\x81@@\xd2q\xc1v?\xfd@\x10\x0c\xbdP\t\xe0\xbe%\xd3\x8c?wWY@0\x0c\xbb\x9a\x9aR\xbc\x15\x1d\x0c\xbb\xd1\xf0\x00\xe0 \x04\x00\x00\x00\x02\xa1\xfa\xff6@\x10 \x02\x06>\x10`\x04\x017\xfe, 0\x0c\xc1\x17pY@@\xbb\xc7\xc1vl\x92@\x10\x0c\xbdP#\xe0\xbe%\xcd\x84?wp\'@0\x0c\xb9\x85!@;r\xd2\x80:\x9f\x80\x00\xe0 \x04\x00\x00\x00\x02\xa5\xfa\xff6@\x10 \x02\x06?\x10`\x04\x018\x02\x14 0\x0c\xc1\x17t#@A \x12\xc1v\x92C@\x10\x0c\xbdQ\x08P\xbe&%\x00?wh\xf1@0\x0c;\xaax\n'
        ]
        reconstructed_msgs = []
        xbus_reconstructor = XbusReconstructor()
        for xbus_msg in xbus_msgs:
            reconstructed_msgs += xbus_reconstructor._reconstruct_xbus_data(xbus_msg)
        for reconstructed_msg in reconstructed_msgs:
            self.assertEqual(reconstructed_msg[0], 0xFA)
        self.assertEqual(len(reconstructed_msgs), 42)
        # print(reconstruced_msgs)

    def test_msg_parsing_from_large_dump(self):
        parsed_msgs = []
        xbus_msgs = [b"\x00\xd9\xfa\xff6@\x10 \x02\x06\x15\x10`\x04\x017^\x04 0\x0c\xc1\x17\xa4\xf3@@2B\xc1p\xb6J@\x10\x0c\xbdQ\xb7\xc0\xbe%\xc8\x18?w|\x8b@0\x0c<\x92\x86\x8c\xbc\xf8.\xf6<\x00\xa4\x00\xe0 \x04\x00\x00\x00\x02\xc5\xfa\xff6@\x10 \x02\x06\x16\x10`\x04\x017a\xec 0\x0c\xc1\x17\xa5\x83@@4&\xc1p\xe7\xe3@\x10\x0c\xbdO\xc3@\xbe%\xd5\x14?wr\x11@0\x0c\xbc\xd8 ^\xbcPyV<\x89z\x00\xe0 \x04\x00\x00\x00\x02\xf5\xfa\xff6@\x10 \x02\x06\x17\x10`\x04\x017e\xd4 0\x0c\xc1\x17\xa8\xf5@@\x07\x88\xc1q\x0b\xd0@\x10\x0c\xbdQ\xe1\x90\xbe%\xb5\xdc?ws\x8d@0\x0c<\xe5\xbdH\xbc\x84\xc6n;\xbf(\x00\xe0 \x04\x00\x00\x00\x02'\xfa\xff6@\x10 \x02\x06\x18\x10`\x04\x017i\xbc 0\x0c\xc1\x17\xa56@@mz\xc1q71@\x10\x0c\xbdP#\xe0\xbe%\xed`?ww\xec@0\x0c\xbb\xd2\xac:;\xd7\x15\xb8:\xe8 \x00\xe0 \x04\x00\x00\x00\x02\x8f\xfa\xff6@\x10 \x02\x06\x19\x10`\x04\x017m\xa4 0\x0c\xc1\x17\xa9\xd0@@Q\xfa\xc1q`Z@\x10\x0c\xbdPd\xa0\xbe&\x03h?wp\xc6@0\x0c<\xa9u\x0e\xbc\x9e\xde\xe6\xb9\x81\x00\x00\xe0 \x04\x00\x00\x00\x02/\xfa\xff6@\x10 \x02\x06\x1a\x10`\x04\x017q\x8c 0\x0c\xc1\x17\xb2\x17@@M\xf4\xc1q\x86\x02@\x10\x0c\xbdQ5\x10\xbe%\x81\xec?wq\x8e@0\x0c\xba2\xef\xd0;\xa0\xe9\xc0<\xa7\xf2\x00\xe0 \x04\x00\x00\x00\x02\xde\xfa\xff6@\x10 \x02\x06\x1b\x10`\x04\x017ut 0\x0c\xc1\x17\xb6\xbc@@2?\xc1q\xaf\xd0@\x10\x0c\xbdP\x1b\xc0\xbe%\xcf\xfc?wqk@0\x0c\xbbpN\xc0;~\xba\xf0;\xe9\x98\x00\xe0 \x04\x00\x00\x00\x02\xfd\xfa\xff6@\x10 \x02\x06\x1c\x10`\x04\x017y\\ 0\x0c\xc1\x17\xb2\x93@@g\xd1\xc1q\xc8i@\x10\x0c\xbdP\xe6`\xbe%\xdc8?wu\x99@0\x0c\xba\xa1\xa5@\xbcj\x19L9\xfe\x80\x00\xe0 \x04\x00\x00\x00\x02\xb4\xfa\xff6@\x10 \x02\x06\x1d\x10`\x04\x017}D 0\x0c\xc1\x17\xae\x10@@Q`\xc1q\xe8U@\x10\x0c\xbdO\x0e\xd0\xbe%\xba\xf8?wn\xae@0\x0c<\x9f\xa9\x0c\xbc~\x02^\xbb-\x10\x00\xe0 \x04\x00\x00\x00\x02\xe6\xfa\xff6@\x10 \x02\x06\x1e\x10`\x04\x017\x81, 0\x0c\xc1\x17\xa1\xd1@@\x7f\xca\xc1r\n"
        ,b'u@\x10\x0c\xbdP\xb4P\xbe%\xd00?wq$@0\x0c;\xaf\x13\xec9\xdfJ\x80<\x1a\xc0\x00\xe0 \x04\x00\x00\x00\x02\xbd\xfa\xff6@\x10 \x02\x06\x1f\x10`\x04\x017\x85\x14 0\x0c\xc1\x17\x9c\xd3@@\x98E\xc1r1\xac@\x10\x0c\xbdO\xcb\x00\xbe&\x05\\?w\x80t@0\x0c<\x04\xe1\xdf\xba\xbaOP;\x97h\x00\xe0 \x04\x00\x00\x00\x02\xee\xfa\xff6@\x10 \x02\x06 \x10`\x04\x017\x88\xfc 0\x0c\xc1\x17\x9av@@\x7f&\xc1rR\x88@\x10\x0c\xbdP\x96\x80\xbe&)\xf4?wm\xcc@0\x0c\xba\xfc\xea\x18\xbc\x98\x12\xc3:Y\x00\x00\xe0 \x04\x00\x00\x00\x02(\xfa\xff6@\x10 \x02\x06!\x10`\x04\x017\x8c\xe4 0\x0c\xc1\x17\x94y@@f\x95\xc1rh\xf8@\x10\x0c\xbdOg \xbe%\xef\xe0?w\x91p@0\x0c\xbb\xea\xb2l\xbcv\xe0\xfa<G\xe4\x00\xe0 \x04\x00\x00\x00\x02\xb7\xfa\xff6@\x10 \x02\x06"\x10`\x04\x017\x90\xcc 0\x0c\xc1\x17\x8eo@@\x96\x06\xc1r\x8b=@\x10\x0c\xbdQF0\xbe%\x92\xec?wo\x9d@0\x0c\xba$\x16@\xbb\x88u\x98\xbc\x98\x9a\x00\xe0 \x04\x00\x00\x00\x02\xea\xfa\xff6@\x10 \x02\x06#\x10`\x04\x017\x94\xb4 0\x0c\xc1\x17\x84>@@\xc1\xba\xc1r\xb0t@\x10\x0c\xbdO,P\xbe%\x93\x88?w\x88\xe2@0\x0c\xbb\x8c\xf4\x92\xbc\xaeAy\xbb\x89(\x00\xe0 \x04\x00\x00\x00\x02\x13\xfa\xff6@\x10 \x02\x06$\x10`\x04\x017\x98\x9c 0\x0c\xc1\x17\x7f\xd5@@\xd8\xa1\xc1r\xd9y@\x10\x0c\xbdR!@\xbe%\xb3$?wxz@0\x0c<,-\r\xbc]\xd6<\xbbU\x80\x00\xe0 \x04\x00\x00\x00\x02<\xfa\xff6@\x10 \x02\x06%\x10`\x04\x017\x9c\x84 0\x0c\xc1\x17|g@@\xcb\xa3\xc1r\xf3\xae@\x10\x0c\xbdP$\xb0\xbe%\xfd\xc8?wp\x8d@0\x0c;\x080\x10\xbc(7z<O\x08\x00\xe0 \x04\x00\x00\x00\x02\xc4\xfa\xff6@\x10 \x02\x06&\x10`\x04\x017\xa0l 0\x0c\xc1\x17wn@@\xf2\x9b\xc1s\x1eW@\x10\x0c\xbdO\xbf\x80\xbe&\x1aH?wag@0\x0c<(\xc8\xfc\xbc\xa0u?\xbcZ\x80\x00\xe0 \x04\x00\x00\x00\x02\xeb\xfa\xff6@\x10 \x02\x06\'\x10`\x04\x017\xa4T 0\x0c\xc1\x17\x80\x1c@A\x11-\xc1sJ\xa7@\x10\x0c\xbdP\xae`\xbe%\xef\x94?wq\xc5@0\x0c:\x04\x11`\xbc!A\x0e\xbcF\x98\x00\xe0 \x04\x00\x00\x00\x02\x14\xfa\xff6@\x10 \x02\x06(\x10`\x04\x017\xa8< 0\x0c\xc1\x17u8@@\xd8\xa4\xc1sn\x95@\x10\x0c\xbdQ\\\x80\xbe&\x18\xb0?wct@0\x0c:\x9d\x11`\xbc\x94}H\xbc]|\x00\xe0 \x04\x00\x00\x00\x02\x94\xfa\xff6@\x10 \x02\x06)\x10`\x04\x017\xac$ 0\x0c\xc1\x17u+@@\x9c)\xc1s\x88\x91@\x10\x0c\xbdP#\x00\xbe%\xb4\x1c?w|\xfe@0\x0c\xbc&\xed\xfc\xbc\x08\x9d><\x90\xc4\x00\xe0 \x04\x00\x00\x00\x02]\xfa\xff6@\x10 \x02\x06*\x10`\x04\x017\xb0\x0c 0\x0c\xc1\x17yq@@\x83\\\xc1s\xad\x9d@\x10\x0c\xbdQ\x0e\x80\xbe%\xb0H?wi5@0\x0c9\xae\xea \xbbh!\x00\xbc\xcb\x92\x00\xe0 \x04\x00\x00\x00\x02\xcf\xfa\xff6@\x10 \x02\x06+\x10`\x04\x017\xb3\xf4 0\x0c\xc1\x17\x88`@@\x88U\xc1s\xcd:@\x10\x0c\xbdO\x92\xa0\xbe%\xe1\xe8?w{\xb5@0\x0c\xbcw\xaf\x08\xba\xed\t@<\xde\x04\x00\xe0 \x04\x00\x00\x00\x02{\xfa\xff6@\x10 \x02\x06,\x10`\x04\x017\xb7\xdc 0\x0c\xc1\x17\x82\x83@@`\x86\xc1s\xeb\x0b@\x10\x0c\xbdPO`\xbe%\xac ?wep@0\x0c\xba\xea$\xa0\xbb\xdf-\xfc\xbc\xdc\x04\x00\xe0 \x04\x00\x00\x00\x02\x84\xfa\xff6@\x10 \x02\x06-\x10`\x04\x017\xbb\xc4 0\x0c\xc1\x17\x89\xc9@@M_\xc1t\x0e\xdc@\x10\x0c\xbdP\x14\x10\xbe%\xd7\x0c?w]R@0\x0c<\n'
        ,b'\x82\x98;\xab\xad\x9c\xbbE\x10\x00\xe0 \x04\x00\x00\x00\x02Q\xfa\xff6@\x10 \x02\x06.\x10`\x04\x017\xbf\xac 0\x0c\xc1\x17\x86\x03@@`4\xc1t/\xe6@\x10\x0c\xbdP80\xbe%\xa9X?wp\xac@0\x0c\xbb\x9a\xc3\xba\xbc\x03\xdc\x0e8t\x00\x00\xe0 \x04\x00\x00\x00\x02\xc3\xfa\xff6@\x10 \x02\x06/\x10`\x04\x017\xc3\x94 0\x0c\xc1\x17\x82r@@Pl\xc1tO&@\x10\x0c\xbdO\xc5`\xbe&\x08p?wg\xe3@0\x0c\xbc\xd1 m\xbb\xb0(|\xbd2\xf1\x00\xe0 \x04\x00\x00\x00\x02\x9f\xfa\xff6@\x10 \x02\x060\x10`\x04\x017\xc7| 0\x0c\xc1\x17}1@@<\x1f\xc1tn\xd5@\x10\x0c\xbdRD \xbe%\xc3\xdc?wah@0\x0c<t\x175\xbcnJ\x8a9{\x00\x00\xe0 \x04\x00\x00\x00\x02\xff\xfa\xff6@\x10 \x02\x061\x10`\x04\x017\xcbd 0\x0c\xc1\x17y\xfc@@|B\xc1t\x92\x9a@\x10\x0c\xbdP\xbb\xf0\xbe%\xd2d?wf\x86@0\x0c<\x83\x1b\xea\xbbYyp:\xfc\xe0\x00\xe0 \x04\x00\x00\x00\x02\xd7\xfa\xff6@\x10 \x02\x062\x10`\x04\x017\xcfL 0\x0c\xc1\x17vp@@K\x93\xc1t\xb0\x9b@\x10\x0c\xbdR \x00\xbe%\xee8?wk\xd2@0\x0c;\xc6\x08\xae;Aj\xd8:\xa9\x80\x00\xe0 \x04\x00\x00\x00\x02\x81\xfa\xff6@\x10 \x02\x063\x10`\x04\x017\xd34 0\x0c\xc1\x17t<@@\x92]\xc1t\xd5\xa9@\x10\x0c\xbdO\xa9@\xbe%\xe7\xbc?w{_@0\x0c<D\x11\x11\xbb\x1c\x18(8,\x00\x00\xe0 \x04\x00\x00\x00\x02a\xfa\xff6@\x10 \x02\x064\x10`\x04\x017\xd7\x1c 0\x0c\xc1\x17\x809@@\x978\xc1u\x04%@\x10\x0c\xbdPf`\xbe%\x84`?wf\xda@0\x0c\xbb\x06\xe5\xfc\xbc\xb8\xf21\xbc\x16\xc4\x00\xe0 \x04\x00\x00\x00\x02\xa8\xfa\xff6@\x10 \x02\x065\x10`\x04\x017\xdb\x04 0\x0c\xc1\x17\x81\x04@@\xc6\xd6\xc1u-\xd2@\x10\x0c\xbdO\xd9p\xbe&\x18p?wq`@0\x0c\xbc2_/\xbc\x84\x14\x1c9\xec\x00\x00\xe0 \x04\x00\x00\x00\x02R\xfa\xff6@\x10 \x02\x066\x10`\x04\x017\xde\xec 0\x0c\xc1\x17\x854@@\xcf"\xc1uT\x1b@\x10\x0c\xbdP\x08\x90\xbe%\xe0\\?wkA@0\x0c\xbb(\x8a\xe0\xbc\xa7\x1cx;*0\x00\xe0 \x04\x00\x00\x00\x02\xc7\xfa\xff6@\x10 \x02\x067\x10`\x04\x017\xe2\xd4 0\x0c\xc1\x17\x85&@A\x03v\xc1uu\x0c@\x10\x0c\xbdP\xfb\xe0\xbe&,T?wo\x0e@0\x0c\xb8A*\x00\xbc\x93\xc5\xe2\xb8\xbe\x00\x00\xe0 \x04\x00\x00\x00\x02>\xfa\xff6@\x10 \x02\x068\x10`\x04\x017\xe6\xbc 0\x0c\xc1\x17\x82\x8c@@\xfa)\xc1u\xa4\xfb@\x10\x0c\xbdQ\x13\xe0\xbe&$\xe0?wrJ@0\x0c<\xa2\xb0\x00\xbb\xe3\x16`<"\x1c\x00\xe0 \x04\x00\x00\x00\x02\xbe\xfa\xff6@\x10 \x02\x069\x10`\x04\x017\xea\xa4 0\x0c\xc1\x17p|@@\xad\x8e\xc1u\xbe\x1c@\x10\x0c\xbdQ\x1eP\xbe&\x12\xac?wrf@0\x0c\xbb$\xc9(\xbd\x06ff\xbb6\xb0\x00\xe0 \x04\x00\x00\x00\x02k\xfa\xff6@\x10 \x02\x06:\x10`\x04\x017\xee\x8c 0\x0c\xc1\x17q\x02@@\xa1\xd0\xc1u\xe1\x08@\x10\x0c\xbdQ\x9eP\xbe%\xd4H?wk\x0b@0\x0c;\xb2\x1d\x12\xbc ?><\x9e\x84\x00\xe0 \x04\x00\x00\x00\x02d\xfa\xff6@\x10 \x02\x06;\x10`\x04\x017\xf2t 0\x0c\xc1\x17o\x92@@\xa2i\xc1u\xfe\xd2@\x10\x0c\xbdP\xaa\x00\xbe%\xd7\xa0?wiF@0\x0c7\xd2Z\x00;a\xa9\x88\xbc\xae\xac\x00\xe0 \x04\x00\x00\x00\x02\xa6\xfa\xff6@\x10 \x02\x06<\x10`\x04\x017\xf6\\ 0\x0c\xc1\x17lc@@\xb28\xc1v\x1c\xb3@\x10\x0c\xbdO\xba\x80\xbe%\xcd$?wp\xc8@0\x0c<J\x08\x05\xbc\x00\xd8.:J\x80\x00\xe0 \x04\x00\x00\x00\x02g\xfa\xff6@\x10 \x02\x06=\x10`\x04\x017\xfaD 0\x0c\xc1\x17m\x81@@\xd2q\xc1v?\xfd@\x10\x0c\xbdP\t\xe0\xbe%\xd3\x8c?wWY@0\x0c\xbb\x9a\x9aR\xbc\x15\x1d\x0c\xbb\xd1\xf0\x00\xe0 \x04\x00\x00\x00\x02\xa1\xfa\xff6@\x10 \x02\x06>\x10`\x04\x017\xfe, 0\x0c\xc1\x17pY@@\xbb\xc7\xc1vl\x92@\x10\x0c\xbdP#\xe0\xbe%\xcd\x84?wp\'@0\x0c\xb9\x85!@;r\xd2\x80:\x9f\x80\x00\xe0 \x04\x00\x00\x00\x02\xa5\xfa\xff6@\x10 \x02\x06?\x10`\x04\x018\x02\x14 0\x0c\xc1\x17t#@A \x12\xc1v\x92C@\x10\x0c\xbdQ\x08P\xbe&%\x00?wh\xf1@0\x0c;\xaax\n'
        ]
        xbus_reconstructor = XbusReconstructor()
        for xbus_msg in xbus_msgs:
            parsed_msgs += xbus_reconstructor.parse_xbus_data(xbus_msg)
        self.assertEqual(len(parsed_msgs), 42)
        self.assertEqual(parsed_msgs[0], {'roll': (-9.477770805358887,), 'pitch': (3.0030674934387207,), 'yaw': (-15.044504165649414,), 'freeAccX': (0.01788642257452011,), 'freeAccY': (-0.030295830219984055,), 'freeAccZ': (0.007851600646972656,)})
        self.assertEqual(parsed_msgs[13], {'roll': (-9.472273826599121,), 'pitch': (3.0091567039489746,), 'yaw': (-15.1589937210083,), 'freeAccX': (-0.0006259419023990631,), 'freeAccY': (-0.004164408892393112,), 'freeAccZ': (-0.01862812042236328,)})

    def test_checksum_calculations(self):
        xbus_reconstructor = XbusReconstructor()
        cs = xbus_reconstructor.calculate_checksum(bytes.fromhex('FAFF3000'))
        self.assertEqual(cs, 0xD1)

        
    def test_reconstruct_multiple_messages(self):
        reconstructed_messages = []
        xbus_msg1 = b"\x00\x0c\xfa\xff6@\x10 \x02\x059\x10`\x04\x01\xb8\x9b\xf1 0\x0c\xc0\x17\t\x87?MJ\xc0\xc0U\x91\xd5@\x10\x0c\xbcY\x90\xc0\xbd#\x91\xc0?z\xfd&@0\x0c<\xeek9\xbc\xaa\x07\xd5\xbb2\xd0\x00\xe0 \x04\x00\x00\x00\x02q\xfa\xff6@\x10 \x02\x05:\x10`\x04\x01\xb8\x9f\xd9 0\x0c\xc0\x17\x19\xfd?N>\xff\xc0U\xb7\xdc@\x10\x0c\xbc[\x1c\x80\xbd$\xd6 ?{\x01\xc7@0\x0c:\xb9W\xda\xba\xb9\xb5h9=\x00\x00\xe0 \x04\x00\x00\x00\x02\xa6\xfa\xff6@\x10 \x02\x05;\x10`\x04\x01\xb8\xa3\xc1 0\x0c\xc0\x17\x17\x91?N\xc3g\xc0U\xd5\xce@\x10\x0c\xbc]\xf1\x80\xbd'F\xb0?z\xf8\x9e@0\x0c\xbb\xa4\xba\xf2\xbc\xcc '<0H\x00\xe0 \x04\x00\x00\x00\x02\x1f\xfa\xff6@\x10 \x02\x05<\x10`\x04\x01\xb8\xa7\xa9 0\x0c\xc0\x17C\xf8?N\xe0z\xc0V\x03w@\x10\x0c\xbcb\x91\xc0\xbd#\xdd\xd0?{\t\xfb@0\x0c\xbb\xdb\xf44\xbb\xf3\xa2\xe6;\xa0\xa0\x00\xe0 \x04\x00\x00\x00\x02\xaf\xfa\xff6@\x10 \x02\x05=\x10`\x04\x01\xb8\xab\x91 0\x0c\xc0\x17W\xe3?NJ\x10\xc0V\x05\xe5@\x10\x0c\xbc^S\xc0\xbd%\x1e\xe0?z\xf1\x92@0\x0c\xbc\x08lp\xbc\x08 W<\\\x90\x00\xe0 \x04\x00\x00\x00\x020\xfa\xff6@\x10 \x02\x05>\x10`\x04\x01\xb8\xafy 0\x0c\xc0\x17~\xb6?N\xa5\xa7\xc0V*\xfc@\x10\x0c\xbc`2\x80\xbd#_\xb0?{\x0f\xa4@0\x0c:N\xac\x98<z\xaa\x82;\x98X\x00\xe0 \x04\x00\x00\x00\x02d\xfa\xff6@\x10 \x02\x05?\x10`\x04\x01\xb8\xb3a 0\x0c\xc0\x17q\xa1?OF\xbc\xc0V\x91S@\x10\x0c\xbc\\C@\xbd$\xa2@?{\x10{@0\x0c;\xcfq\x08=\x02Ea\xba;\xc0\x00\xe0 \x04\x00\x00\x00\x02g\xfa\xff6@\x10 \x02\x05@\x10`\x04\x01\xb8\xb7I 0\x0c\xc0\x17\x95\xe0?P\x16\xb7\xc0V\xc9\xb0@\x10\x0c\xbc^3\x00\xbd$=p?z\xf8\\@0\x0c\xbb\x125\xc9:\xb4E8\xbb`\xb0\x00\xe0 \x04\x00\x00\x00\x02\x8d\xfa\xff6@\x10 \x02\x05A\x10`\x04\x01\xb8\xbb1 0\x0c\xc0\x17\x8a*?O\xde\x10\xc0W\x075@\x10\x0c\xbc^\xf0\xc0\xbd&,\xb0?z\xfdc@0\x0c<@\xe8\xe3\xbcfuD;\x88\x80\x00\xe0 \x04\x00\x00\x00\x02_\xfa\xff6@\x10 \x02\x05B\x10`\x04\x01\xb8\xbf\x19 0\x0c\xc0\x17\x95.?P\x17P\xc0W\x06v@\x10\x0c\xbcc\x1c\x00\xbd$\x7f ?z\xfeH@0\x0c\xbco\xea\xd9\xbbb+89\x1a\x00\x00\xe0 \x04\x00\x00\x00\x025\xfa\xff6@\x10 \x02\x05C\x10`\x04\x01\xb8\xc3\x01 0\x0c\xc0\x17\x8bo?P\x08|\xc0WC\xa3@\x10\x0c\xbcUJ\xc0\xbd&\x1a\x00?{\x14\xf9@0\x0c<\x87\xa8#\xbaP\xdc\xc0\xbc\x82\x12\x00\xe0 \x04\x00\x00\x00\x02\xa2\xfa\xff6@\x10 \x02\x05D\x10`\x04\x01\xb8\xc6\xe9 0\x0c\xc0\x17\x7f\xf7?O~\xf8\xc0WF9@\x10\x0c\xbc_\x14\x80\xbd%\r\x80?{\x07\x02@0\x0c\xbce8\xef<^\x87\xdf\xba\xae\x80\x00\xe0 \x04\x00\x00\x00\x02\x02\xfa\xff6@\x10 \x02\x05E\x10`\x04\x01\xb8\xca\xd1 0\x0c\xc0\x17s\xb5?O\xac\x1d\xc0Wd2@\x10\x0c\xbc`\xbf\xc0\xbd%\r\xf0?z\xfd\xde@0\x0c\xbb\xfd\x06\xf4\xbc\x16\x13\xd3;\x94\xd0\x00\xe0 \x04\x00\x00\x00\x02\xf3\xfa\xff6@\x10 \x02\x05F\x10`\x04\x01\xb8\xce\xb9 0\x0c\xc0\x17\x95\x14?P\xd1\x12\xc0W\x8cP@\x10\x0c\xbce1\x00\xbd$\xf20?{\x0b`@0\x0c\xbbT\x0f\x1c\xbc\x11\xc1\xac:\xa8@\x00\xe0 \x04\x00\x00\x00\x02+\xfa\xff6@\x10 \x02\x05G\x10`\x04\x01\xb8\xd2\xa1 0\x0c\xc0\x17\xa8??QH\xbb\xc0W\xd6\xbc@\x10\x0c\xbc]\x87\x80\xbd%\x08\x00?{\x02\xba@0\x0c;\x0e\xfc\x01\xbb\xb0%\x8e:\xb1\x00\x00\xe0 \x04\x00\x00\x00\x02j\xfa\xff6@\x10 \x02\x05H\x10`\x04\x01\xb8\xd6\x89 0\x0c\xc0\x17\x8b\xb1?Q\xbc\xd9\xc0W\xfe;@\x10\x0c\xbcc\x85\xc0\xbd&\xa9p?z\xf2`@0\x0c\xbb\x08\xe6\xc7:\xdb\x15(\xbc\x0b|\x00\xe0 \x04\x00\x00\x00\x02N\xfa\xff6@\x10 \x02\x05I\x10`\x04\x01\xb8\xdaq 0\x0c\xc0\x17\x82>?R\x82\x9c\xc0X1\xf1@\x10\x0c\xbcW\xe7\x00\xbd$\xc2\x10?{\x01\x1b@0\x0c<:\xfb\xdf;m/$:\x8e\x80\x00\xe0 \x04\x00\x00\x00\x02\xc3\xfa\xff6@\x10 \x02\x05J\x10`\x04\x01\xb8\xdeY 0\x0c\xc0\x17cK?R\xf6A\xc0X\x7f\xfd@\x10\x0c\xbcd\x8c@\xbd$\xa4\xf0?{\x02R@0\x0c\xb9\xf4\x9e\xa8\xbcE\xc5\x97\xbb\xf6@\x00\xe0 \x04\x00\x00\x00\x02\xdb\xfa\xff6@\x10 \x02\x05K\x10`\x04\x01\xb8\xe2A 0\x0c\xc0\x17lj?Sg\xe0\xc0X\x9dD@\x10\x0c\xbc\\:\x80\xbd%\x1f0?z\xf4X@0\x0c\xbc\xf3\x97\x12;\x17\xf1D=\x0e\xb0\x00\xe0 \x04\x00\x00\x00\x02\x1e\xfa\xff6@\x10 \x02\x05L\x10`\x04\x01\xb8\xe6) 0\x0c\xc0\x17\xac\x1b?S*2\xc0X\xbc;@\x10\x0c\xbc`8\xc0\xbd$\xe3@?{\x01\x91@0\x0c\xbcw'v\xbbi\xed\x8c<\x84\x08\x00\xe0 \x04\x00\x00\x00\x02^\xfa\xff6@\x10 \x02\x05M\x10`\x04\x01\xb8\xea\x11 0\x0c\xc0\x17\xb8\x8c?S|\xf0\xc0X\xe5\xa5@\x10\x0c\xbc_\xc0\xc0\xbd%n\xb0?{\x0e\xb2@0\x0c<\x9e\xbai:\xbc\x90\xa8<\x94\xc6\x00\xe0 \x04\x00\x00\x00\x02\x14\xfa\xff6@\x10 \x02\x05N\x10`\x04\x01\xb8\xed\xf9 0\x0c\xc0\x17\xa1\xa4?R\xeb\x03\xc0Y\x16S@\x10\x0c\xbcY\xe2\x00\xbd$\xa0@?{\r\xe6@0\x0c;\x87\x82n<v$B;\x03\x90\x00\xe0 \x04\x00\x00\x00\x02\x9f\xfa\xff6@\x10 \x02\x05O\x10`\x04\x01\xb8\xf1\xe1 0\x0c\xc0\x17_\x83?S\x13 \xc0YHA@\x10\x0c\xbcc?@\xbd$\x03\x00?z\xffY@0\x0c<\x90\t.\xbcs\rJ\xbc\n"
        xbus_msg2 = b'd\x00\xe0 \x04\x00\x00\x00\x02f\xfa\xff1\x00\xd0\xfa\xff\x11\x00\xf0\xfa\xff6@\x10 \x02\x00\x00\x10`\x04\x01\xb8\xf8\x8f 0\x0c\xc0\x12\xe9\xac?P\xe4\x8a\xbd\n'
        xbus_msg3 = b'\x9bK@\x10\x0c\xbcZ\xa4\x00\xbd\x1f\xcf0?t\xbc\x06@0\x0c< @\xaf<\xbf\xe1\xd4<\x86z\x00\xe0 \x04\x00\x00\x00\x00\x1b\xfa\xff6@\x10 \x02\x00\x01\x10`\x04\x01\xb8\xfcw 0\x0c\xc0\x12\xfd\xfd?Q.\x05\xbd\x13\xb7\\@\x10\x0c\xbc[S@\xbd%\xec\x80?z\xfb\xc4@0\x0c=\x17BG\xbc\xdd\x85\xab=\x0c\xf0\x00\xe0 \x04\x00\x00\x00\x00\xbf\xfa\xff6@\x10 \x02\x00\x02\x10`\x04\x01\xb9\x00_ 0\x0c\xc0\x13\x1c\x88?Q\x851\xbd!\xcbn@\x10\x0c\xbc`\xa2\xc0\xbd$\x00@?{\x0cC@0\x0c<Zb\';\x88o\r<\xe1\x0c\x00\xe0 \x04\x00\x00\x00\x00\x8f\xfa\xff6@\x10 \x02\x00\x03\x10`\x04\x01\xb9\x04G 0\x0c\xc0\x13&a?Q\xdf\xeb\xbd%\x84\x97@\x10\x0c\xbcd\xd0\x80\xbd%*\xf0?z\xef\xa7@0\x0c\xba\xe2\xa0\xcc\xbaT?\xf09x\x00\x00\xe0 \x04\x00\x00\x00\x00C\xfa\xff6@\x10 \x02\x00\x04\x10`\x04\x01\xb9\x08/ 0\x0c\xc0\x13 \xdb?R?\xa4\xbd,\x114@\x10\x0c\xbc]\xf7\xc0\xbd%\xa8\xc0?z\xfc:@0\x0c<\xe8@\xc5\xbc]VN<\x82r\x00\xe0 \x04\x00\x00\x00\x00)\xfa\xff6@\x10 \x02\x00\x05\x10`\x04\x01\xb9\x0c\x17 0\x0c\xc0\x13QX?Ru\xea\xbdAG\xe2@\x10\x0c\xbcb^\x80\xbd#! ?z\xee\xa7@0\x0c\xbb\xb8\xf9\x9d\xbcv\x94\xe7\xbcu\xc4\x00\xe0 \x04\x00\x00\x00\x00"\xfa\xff6@\x10 \x02\x00\x06\x10`\x04\x01\xb9\x0f\xff 0\x0c\xc0\x13\x86\x1e?R\xd4\xd5\xbdWn@@\x10\x0c\xbce\x98\x80\xbd%\x9d0?z\xeeX@0\x0c<;\xa6a\xbc\x1bI\xb6<\x15D\x00\xe0 \x04\x00\x00\x00\x00\x9c\xfa\xff6@\x10 \x02\x00\x07\x10`\x04\x01\xb9\x13\xe7 0\x0c\xc0\x13\x93{?S&\xf2\xbdd\x18s@\x10\x0c\xbc_\x13\x00\xbd$K`?{\t\xc9@0\x0c<\x12\xect\xb9\x9b\x97@;M\x00\x00\xe0 \x04\x00\x00\x00\x00\x14\xfa\xff6@\x10 \x02\x00\x08\x10`\x04\x01\xb9\x17\xcf 0\x0c\xc0\x13\x96\xb7?S?\xd0\xbda\x15\x1c@\x10\x0c\xbc^\xee\x80\xbd%\x17\xb0?{\x0c\x19@0\x0c<>\t\xfa\xbb3\x8f0<3\xc0\x00\xe0 \x04\x00\x00\x00\x00\x8c\xfa\xff6@\x10 \x02\x00\t\x10`\x04\x01\xb9\x1b\xb7 0\x0c\xc0\x13\xe0g?Sf\x9f\xbdg\x9c{@\x10\x0c\xbc\\\xf1\x80\xbd$9\x80?{\x05u@0\x0c<\x99\x8f\xfa\xbc8\xfa3\xbb\xc0\xf8\x00\xe0 \x04\x00\x00\x00\x00\xe3'
        xbus_msg3_extra = b'\xfa\xff6@\x10 \x02\x00\n'
        xbus_msg_combined = xbus_msg1 + xbus_msg2 + xbus_msg3
        xbus_reconstructor = XbusReconstructor()
        reconstructed_messages += xbus_reconstructor._reconstruct_xbus_data(xbus_msg1)
        reconstructed_messages += xbus_reconstructor._reconstruct_xbus_data(xbus_msg2)
        reconstructed_messages += xbus_reconstructor._reconstruct_xbus_data(xbus_msg3)
        total_bytes_reconstructed_messages = 0
        for reconstructed_msg in reconstructed_messages:
            total_bytes_reconstructed_messages += len(reconstructed_msg)
        
        #account for the 2 bytes in the front of the msg
        self.assertEqual(total_bytes_reconstructed_messages+2, len(xbus_msg_combined))
        self.assertEqual(len(reconstructed_messages), 35)
        self.assertEqual(reconstructed_messages[29], b'\xfa\xff6@\x10 \x02\x00\x04\x10`\x04\x01\xb9\x08/ 0\x0c\xc0\x13 \xdb?R?\xa4\xbd,\x114@\x10\x0c\xbc]\xf7\xc0\xbd%\xa8\xc0?z\xfc:@0\x0c<\xe8@\xc5\xbc]VN<\x82r\x00\xe0 \x04\x00\x00\x00\x00)')



    def test_reconstruct_single_message(self):
        xbus_reconstructor = XbusReconstructor()
        xbus_data = b'\xFA\xFF\x36\x31\x10\x20\x02\xDF\xC5\x10\x60\x04\x00\x45\x9D\xA0\x40\x20\x0C\xBE\xDC\x9A\xFA\x3F\x54\x9F\x37\x41\x1C\xBB\x70\x80\x20\x0C\xBB\xAA\x5C\x80\x3B\x8C\x55\x01\xBB\x81\x33\x00\xE0\x20\x04\x00\x00\x00\x81\x45'
        reconstructed_messages = xbus_reconstructor._reconstruct_xbus_data(xbus_data)
        self.assertEqual(len(reconstructed_messages), 1)
        self.assertEqual(xbus_data, reconstructed_messages[0])

        xbus_reconstructor = XbusReconstructor()
        xbus_data = b'\x00\xa0\xfa\xff6@\x10 \x025_\x10`\x04\x01\xf4\xda\xf2 0\x0c>\xa1\x7f\x96\xbe\xd2e\xaeA\xa1&\xc2@\x10\x0c;\xef_\x00;\xa8\xe5\x80?{#|@0\x0c9\xa5\x9e\x0c\xbb\xec\x9ao\xbb\x85\xe0\x00\xe0 \x04\x00\x00\x00\x02s\xfa\xff6@\x10 \x025`\x10`\x04\x01\xf4\xde\xda 0\x0c>\xa2K\xcc\xbe\xd3\x19LA\xa1(\xba@\x10\x0c;\xf3\xf9\x00;\x94X\x80?{Ja@0\x0c\xbc\x91\xa28<\xfbl\xa8<\x81(\x00\xe0 \x04\x00\x00\x00\x02.\xfa\xff6@\x10 \x025a\x10`\x04\x01\xf4\xe2\xc2 0\x0c>\xa3\x0f-\xbe\xd4\xa1uA\xa121@\x10\x0c;\xf9i\x80;\xb0<\x80?{,\xee@0\x0c\xbb\xf6\x90$;\x8fb\xc3;\xb0\xb8\x00\xe0 \x04\x00\x00\x00\x02\xe3\xfa\xff6@\x10 \x025b\x10`\x04\x01\xf4\xe6\xaa 0\x0c>\xa4\xb6\x9b\xbe\xd5g\xd3A\xa199@\x10\x0c;\xe9-\x00;\x8eO\x00?{7u@0\x0c:\xc2cz\xbb\x8a\t\xd1\xbb.\x80\x00\xe0 \x04\x00\x00\x00\x02\x0b\xfa\xff6@\x10 \x025c\x10`\x04\x01\xf4\xea\x92 0\x0c>\xa4\xe4\xb1\xbe\xd5\xfa\xe4A\xa1CB@\x10\x0c<\x07\x8f\x80;\xac\xf2\x00?{6\xc0@0\x0c:\x81\xc4P<\x00\x93E\xbc\x13\x8c\x00\xe0 \x04\x00\x00\x00\x02:\xfa\xff6@\x10 \x025d\x10`\x04\x01\xf4\xeez 0\x0c>\xa4=\xfe\xbe\xd5\xc6\x15A\xa1O\x01@\x10\x0c;\xd2\x9a\x80;\xb0\xcf\x80?{;b@0\x0c\xbc\x0b\x87C<\x9d\xeb\xe5\xbb\xc8\x10\x00\xe0 \x04\x00\x00\x00\x02s\xfa\xff6@\x10 \x025e\x10`\x04\x01\xf4\xf2b 0\x0c>\xa4$\x82\xbe\xd6\x99\x82A\xa1Pl@\x10\x0c;\xfb\x9c\x00;\x94\x1c\x80?{>\x9e@0\x0c<\xe17*\xbbT\x1d8;\x90\xc0\x00\xe0 \x04\x00\x00\x00\x02\xb3\xfa\xff6@\x10 \x025f\x10`\x04\x01\xf4\xf6J 0\x0c>\xa4\x82\xd7\xbe\xd7\t/A\xa1R\x0f@\x10\x0c;\xe4\xbf\x00;\xa9]\x00?{5Y@0\x0c<\x8b\xa1\xf7<\t\xe0s9\x95\x00\x00\xe0 \x04\x00\x00\x00\x02d\xfa\xff6@\x10 \x025g\x10`\x04\x01\xf4\xfa2 0\x0c>\xa3\xfe\x08\xbe\xd5\x81\x88A\xa1V\x07@\x10\x0c;\xfa\xc6\x80;\xa0\xae\x00?{<4@0\x0c<\x1a\x06\x9e9\xfc\xc9H:1\xc0\x00\xe0 \x04\x00\x00\x00\x02\x93\xfa\xff6@\x10 \x025h\x10`\x04\x01\xf4\xfe\x1a 0\x0c>\xa5\xa1\xf4\xbe\xd3\xa1\xebA\xa1Y\xee@\x10\x0c;\xe8\xba\x00;\x8a\xc7\x80?{RV@0\x0c\xbc\n'
        reconstructed_messages = xbus_reconstructor._reconstruct_xbus_data(xbus_data)
        self.assertEqual(len(reconstructed_messages), 9)
        expected_output = [b'\xfa\xff6@\x10 \x025_\x10`\x04\x01\xf4\xda\xf2 0\x0c>\xa1\x7f\x96\xbe\xd2e\xaeA\xa1&\xc2@\x10\x0c;\xef_\x00;\xa8\xe5\x80?{#|@0\x0c9\xa5\x9e\x0c\xbb\xec\x9ao\xbb\x85\xe0\x00\xe0 \x04\x00\x00\x00\x02s', b'\xfa\xff6@\x10 \x025`\x10`\x04\x01\xf4\xde\xda 0\x0c>\xa2K\xcc\xbe\xd3\x19LA\xa1(\xba@\x10\x0c;\xf3\xf9\x00;\x94X\x80?{Ja@0\x0c\xbc\x91\xa28<\xfbl\xa8<\x81(\x00\xe0 \x04\x00\x00\x00\x02.', b'\xfa\xff6@\x10 \x025a\x10`\x04\x01\xf4\xe2\xc2 0\x0c>\xa3\x0f-\xbe\xd4\xa1uA\xa121@\x10\x0c;\xf9i\x80;\xb0<\x80?{,\xee@0\x0c\xbb\xf6\x90$;\x8fb\xc3;\xb0\xb8\x00\xe0 \x04\x00\x00\x00\x02\xe3', b'\xfa\xff6@\x10 \x025b\x10`\x04\x01\xf4\xe6\xaa 0\x0c>\xa4\xb6\x9b\xbe\xd5g\xd3A\xa199@\x10\x0c;\xe9-\x00;\x8eO\x00?{7u@0\x0c:\xc2cz\xbb\x8a\t\xd1\xbb.\x80\x00\xe0 \x04\x00\x00\x00\x02\x0b', b'\xfa\xff6@\x10 \x025c\x10`\x04\x01\xf4\xea\x92 0\x0c>\xa4\xe4\xb1\xbe\xd5\xfa\xe4A\xa1CB@\x10\x0c<\x07\x8f\x80;\xac\xf2\x00?{6\xc0@0\x0c:\x81\xc4P<\x00\x93E\xbc\x13\x8c\x00\xe0 \x04\x00\x00\x00\x02:', b'\xfa\xff6@\x10 \x025d\x10`\x04\x01\xf4\xeez 0\x0c>\xa4=\xfe\xbe\xd5\xc6\x15A\xa1O\x01@\x10\x0c;\xd2\x9a\x80;\xb0\xcf\x80?{;b@0\x0c\xbc\x0b\x87C<\x9d\xeb\xe5\xbb\xc8\x10\x00\xe0 \x04\x00\x00\x00\x02s', b'\xfa\xff6@\x10 \x025e\x10`\x04\x01\xf4\xf2b 0\x0c>\xa4$\x82\xbe\xd6\x99\x82A\xa1Pl@\x10\x0c;\xfb\x9c\x00;\x94\x1c\x80?{>\x9e@0\x0c<\xe17*\xbbT\x1d8;\x90\xc0\x00\xe0 \x04\x00\x00\x00\x02\xb3', b'\xfa\xff6@\x10 \x025f\x10`\x04\x01\xf4\xf6J 0\x0c>\xa4\x82\xd7\xbe\xd7\t/A\xa1R\x0f@\x10\x0c;\xe4\xbf\x00;\xa9]\x00?{5Y@0\x0c<\x8b\xa1\xf7<\t\xe0s9\x95\x00\x00\xe0 \x04\x00\x00\x00\x02d', b'\xfa\xff6@\x10 \x025g\x10`\x04\x01\xf4\xfa2 0\x0c>\xa3\xfe\x08\xbe\xd5\x81\x88A\xa1V\x07@\x10\x0c;\xfa\xc6\x80;\xa0\xae\x00?{<4@0\x0c<\x1a\x06\x9e9\xfc\xc9H:1\xc0\x00\xe0 \x04\x00\x00\x00\x02\x93']
        self.assertEqual(reconstructed_messages, expected_output)
    
    def test_parse_mtdata2_message(self):
        xbus_reconstructor = XbusReconstructor()
        
        xbus_data = b"\xfa\xff6@\x10 \x02\x05\x95\x10`\x04\x01\x8f\xc0\xd0 0\x0c\xc0\x05\x9d'?\x97\xf2D\xbf\xf6\xda\x10@\x10\x0c\xbc\xa3\xbe`\xbd\x0f)p?{\x0b`@0\x0c;\xa7[\xa7<\xaeT\xdc<\x83^\x00\xe0 \x04\x00\x00\x00\x02\x9b"
        parsed_expected_output = [{'roll': (-2.087716817855835,), 'pitch': (1.1870808601379395,), 'yaw': (-1.9285297393798828,), 'freeAccX': (0.0051073613576591015,), 'freeAccY': (0.021280698478221893,), 'freeAccZ': (0.016036033630371094,)}]
        parsed_data = xbus_reconstructor.parse_xbus_data(xbus_data)
        self.assertEqual(parsed_data, parsed_expected_output)

if __name__ == '__main__':
    unittest.main()
